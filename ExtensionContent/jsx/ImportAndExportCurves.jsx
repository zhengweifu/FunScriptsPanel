$._ext_ILST = {    ImportAndExportCurves: {}};$._ext_ILST.ImportAndExportCurves.import = function(dataString) {	// dataString = "m -0.561 1.493 b -0.701 1.564 -1.243 1.707 -1.694 1.138 b -1.863 0.899 -2.018 0.255 -1.926 -0.329 b -1.834 -0.912 -1.747 -0.956 -1.538 -1.271 b -1.328 -1.585 -1.677 -1.916 -1.942 -1.63 b -2.206 -1.343 -2.369 -1.002 -2.488 -0.394 b -2.608 0.215 -2.592 0.869 -2.404 1.346 b -2.216 1.823 -1.663 2.262 -0.889 2.25 b -0.116 2.239 0.297 1.71 0.358 1.243 b 0.418 0.777 0.326 0.322 0.261 -0.004 b 0.196 -0.331 0.334 -0.572 0.523 -0.564 b 0.713 -0.555 0.76 -0.149 0.706 0.101 b 0.652 0.351 0.639 0.678 0.736 0.99 b 0.833 1.303 1.246 1.394 1.148 1.435 b 1.039 1.48 0.774 1.526 0.673 1.584 b 0.53 1.666 0.479 1.723 0.538 1.795 b 0.642 1.923 0.787 1.848 0.888 1.874 b 0.954 1.892 0.814 2.032 0.894 2.087 b 1.013 2.167 1.125 2.128 1.202 2.093 b 1.197 2.287 1.307 2.267 1.376 2.284 b 1.445 2.301 1.543 2.243 1.601 2.136 b 1.659 2.028 1.661 1.935 1.662 1.842 b 1.779 1.869 1.895 1.895 2.018 1.797 b 2.141 1.7 2.528 1.647 2.576 1.485 b 2.608 1.375 2.05 1.275 1.964 1.236 b 1.878 1.195 1.846 1.079 1.778 0.993 b 2.001 1.03 2.235 0.833 2.182 0.684 b 2.13 0.535 2.008 0.494 1.912 0.504 b 1.815 0.514 1.503 0.703 1.604 0.525 b 1.705 0.347 2.228 0.127 2.223 -0.72 b 2.218 -1.567 1.552 -2.275 0.622 -2.288 b -0.308 -2.301 -0.746 -1.863 -1.129 -1.283 b -1.512 -0.702 -1.51 0.118 -1.354 0.574 b -1.198 1.031 -0.97 1.411 -0.561 1.493 m -0.233 0.869 b -0.491 0.775 -0.596 0.63 -0.715 0.227 b -0.835 -0.175 -0.781 -0.626 -0.581 -0.985 b -0.381 -1.345 -0.086 -1.67 0.577 -1.7 b 1.24 -1.729 1.454 -1.275 1.57 -0.876 b 1.685 -0.478 1.394 0.034 1.304 -0.007 b 1.268 -0.023 1.227 -0.039 1.235 -0.352 b 1.244 -0.665 1.188 -1.265 0.556 -1.297 b -0.075 -1.33 -0.374 -0.639 -0.338 -0.226 b -0.302 0.187 -0.168 0.706 -0.233 0.869";	    var doc = app.activeDocument;    var i, path, pts, outline, action, length,        x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2;    if(dataString) {        outline = dataString.split(' ');        length = outline.length;        for ( i = 0; i < length; ) {            action = outline[ i ++ ];            switch ( action ) {            case 'm':                 path= doc.activeLayer.pathItems.add();                 pts = [];                // Move To                x = parseFloat(outline[ i ++ ]);                y = parseFloat(outline[ i ++ ]);                pts.push(path.pathPoints.add());                                pts[pts.length-1].anchor = [x, y];                break;            case 'l':                // Line To                x = parseFloat(outline[ i ++ ]);                y = parseFloat(outline[ i ++ ]);                pts[pts.length-1].rightDirection = pts[pts.length-1].anchor;                pts.push(path.pathPoints.add());                pts[pts.length-1].anchor = [x, y];                pts[pts.length-1].leftDirection = pts[pts.length-1].anchor;                break;            case 'q':                // QuadraticCurveTo                cpx  = parseFloat(outline[ i ++ ]);                cpy  = parseFloat(outline[ i ++ ]);                cpx1 = parseFloat(outline[ i ++ ]);                cpy1 = parseFloat(outline[ i ++ ]);                pts[pts.length-1].rightDirection = [cpx1, cpy1];                pts.push(path.pathPoints.add());                pts[pts.length-1].anchor = [cpx, cpy];                pts[pts.length-1].leftDirection = [cpx1, cpy1];              break;            case 'b':                // Cubic Bezier Curve                cpx1 = parseFloat(outline[ i ++ ]);                cpy1 = parseFloat(outline[ i ++ ]);                cpx2 = parseFloat(outline[ i ++ ]);                cpy2 = parseFloat(outline[ i ++ ]);                cpx  = parseFloat(outline[ i ++ ]);                cpy  = parseFloat(outline[ i ++ ]);                  pts[pts.length-1].rightDirection = [cpx1, cpy1];                pts.push(path.pathPoints.add());                                pts[pts.length-1].anchor = [cpx, cpy];                pts[pts.length-1].leftDirection = [cpx2, cpy2];                break;            }        }    }    };$._ext_ILST.ImportAndExportCurves.export = function(accuracy) {    accuracy = accuracy === undefined ? 2 : accuracy;	var doc = app.activeDocument;    var sel = doc.selection;    var i, j, pts, length = sel.length, dataString = "";    for(i=0; i<length; i++) {        if(dataString === "")            dataString += "m ";        else            dataString += " m ";        var type = sel[i].typename;        if(type == "PathItem") {            pts = sel[i].pathPoints;            for(j=0; j<pts.length; j++) {                if(j === 0)                    dataString += pts[j].anchor[0].toFixed(accuracy) + " " + pts[j].anchor[1].toFixed(accuracy);                else                    dataString += " b " + pts[j-1].rightDirection[0].toFixed(accuracy) + " " + pts[j-1].rightDirection[1].toFixed(accuracy)                               + " " + pts[j].leftDirection[0].toFixed(accuracy) + " " + pts[j].leftDirection[1].toFixed(accuracy)                               + " " + pts[j].anchor[0].toFixed(accuracy) + " " + pts[j].anchor[1].toFixed(accuracy);            }        }    }    return dataString;};//$._ext_ILST.ImportAndExportCurves.import("");// $.writeln($._ext_ILST.ImportAndExportCurves.export());